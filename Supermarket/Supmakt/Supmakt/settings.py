"""
Django settings for Supmakt project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b6&+aw)&x8ubq+!8c3*t_@zl9dxe%258+^7x_fx$2gx%=to(2q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'haystack',  # 全文检索框架 配置在所有自己应用之前
	'login.apps.LoginConfig',
	'index.apps.IndexConfig',
	'goods.apps.GoodsConfig',
	'shopcart.apps.ShopcartConfig',
	'ckeditor',  # 添加ckeditor富文本编辑器
	'ckeditor_uploader',  # 添加ckeditor富文本编辑器文件上传部件
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Supmakt.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'templates')]
		,
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'django.template.context_processors.media',
			],
		},
	},
]

WSGI_APPLICATION = 'Supmakt.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

		# 配置MySQL数据库
		# 'ENGINE': 'django.db.backends.mysql',
		# 'OPTIONS': {
		#     'read_default_file': os.path.join(BASE_DIR, "my.cnf"),
		# },

	}
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# 设置静态文件根目录  调试的时候使用
STATICFILES_DIRS = [os.path.join(BASE_DIR, "my_static")]

# # 设置静态文件根目录  上线的时候使用
# STATIC_ROOT = os.path.join(BASE_DIR, "my_static")

# # 分配一个资源URL
# MEDIA_URL = "/static/media/"
# # 配置该URL对应的物理目录存储地址
# MEDIA_ROOT = os.path.join(BASE_DIR, 'my_static/media/')

# 这个目录是相对目录，相对与 MEDIA_ROOT
CKEDITOR_UPLOAD_PATH = "uploads/"
# 编辑器样式配置
CKEDITOR_CONFIGS = {
	'default': {
		'toolbar': 'full',
	},
}
# 配置缓存为Redis
CACHES = {
	"default": {
		"BACKEND": "django_redis.cache.RedisCache",
		"LOCATION": "redis://127.0.0.1:6379/1",
		"OPTIONS": {
			"CLIENT_CLASS": "django_redis.client.DefaultClient",
		}
	}
}
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# 七牛云密钥等配置
QINIU_ACCESS_KEY = 'S9TrdZka2Yf59m5-Td4Oo6GU9keUyXdIKTL0lwfZ'
QINIU_SECRET_KEY = 'HmIorycKuCc_ypBIePM6RkmrnyQdBVRM6ueC5jfk'
QINIU_BUCKET_NAME = 'supermarke'
QINIU_BUCKET_DOMAIN = 'pflm45kzy.bkt.clouddn.com/'
QINIU_SECURE_URL = False  # 使用安全协议使用http
PREFIX_URL = 'http://'

# 上传文件地址配置
MEDIA_URL = PREFIX_URL + QINIU_BUCKET_DOMAIN + "/"
# 上传文件的存储引擎配置
DEFAULT_FILE_STORAGE = 'qiniustorage.backends.QiniuStorage'

# 全文检索框架的配置
HAYSTACK_CONNECTIONS = {
	'default': {
		# 配置搜索引擎 whoosh自带的分词对中文不友好
		# 'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
		# 中文分词 使用jieba的whoosh引擎
		'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
		# 配置索引文件目录
		'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
	},
}
# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'
